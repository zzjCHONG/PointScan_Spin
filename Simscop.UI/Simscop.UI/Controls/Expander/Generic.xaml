<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:Simscop.UI.Controls.Attach"
    xmlns:controls="clr-namespace:Simscop.UI.Controls"
    xmlns:converter="clr-namespace:Simscop.UI.Common.Converter"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Geometry x:Key="UpGeometry" o:Freeze="True">M50.000001,0 L100,51.262779 94.262627,57.141584 50.000001,11.767713 5.7373757,57.151686 0,51.27288 z</Geometry>
    <Geometry x:Key="DownGeometry" o:Freeze="True">M512 801.6896L5.12 282.0096l58.1632-59.5968L512 682.3936l448.7168-460.0832 58.1632 59.5968-506.88 519.7824z</Geometry>

    <Style x:Key="ToggleButtonCustom" TargetType="ToggleButton">
        <Setter Property="attach:ValueAttach.CornerRadius" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="Chrome"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(attach:ValueAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="true">
                        <controls:SimplePanel>
                            <ContentPresenter
                                Name="UnCheckedElement"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter
                                Name="CheckedElement"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{Binding Path=(attach:ValueAttach.CheckedElement), RelativeSource={RelativeSource TemplatedParent}}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                        </controls:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="UnCheckedElement" Property="Opacity" Value=".9" />
                            <Setter TargetName="CheckedElement" Property="Opacity" Value=".9" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="UnCheckedElement" Property="Opacity" Value=".6" />
                            <Setter TargetName="CheckedElement" Property="Opacity" Value=".6" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attach:ValueAttach.HideUncheckedElement" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="UnCheckedElement" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderDownTemplate" TargetType="Expander">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ToggleButton
                x:Name="ToggleButton"
                MinHeight="{TemplateBinding MinHeight}"
                Padding="10,0,0,0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                attach:ValueAttach.CornerRadius="4"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Focusable="False"
                Foreground="{TemplateBinding Foreground}"
                IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                Style="{StaticResource ToggleButtonCustom}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        ContentSource="Header" />
                    <Path
                        Name="PathArrow"
                        Grid.Column="1"
                        Width="12"
                        HorizontalAlignment="Center"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Data="{StaticResource DownGeometry}"
                        Fill="{TemplateBinding Foreground}"
                        IsHitTestVisible="False"
                        Stretch="Uniform" />
                </Grid>
            </ToggleButton>
            <Border
                Name="ExpandSite"
                Grid.Row="1"
                Background="{DynamicResource Region02}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="0,0,4,4"
                Visibility="Collapsed">
                <ContentPresenter />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter TargetName="ToggleButton" Property="attach:ValueAttach.CornerRadius" Value="{Binding Path=(attach:ValueAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={converter:CornerRadiusSplitConverter Radius='1,1,0,0'}}" />
                <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                <Setter TargetName="PathArrow" Property="Data" Value="{StaticResource UpGeometry}" />

                <Setter Property="BorderThickness" Value="1,1,1,0" />
                <Setter TargetName="ExpandSite" Property="BorderThickness" Value="1,0,1,1" />

                <Setter TargetName="ToggleButton" Property="attach:ValueAttach.CornerRadius" Value="4,4,0,0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value=".4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseExpander" TargetType="Expander">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush01}" />
        <Setter Property="Background" Value="{DynamicResource Region04}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush02}" />

        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource ExpanderDownTemplate}" />
    </Style>


</ResourceDictionary>