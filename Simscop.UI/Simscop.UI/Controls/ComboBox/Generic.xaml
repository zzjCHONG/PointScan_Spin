<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:attach="clr-namespace:Simscop.UI.Controls.Attach"
    xmlns:controls="clr-namespace:Simscop.UI.Controls"
    xmlns:o="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid Height="25">
            <Border
                Background="Transparent"
                Cursor="Hand"
                Opacity="0" />
            <Path
                x:Name="Arrow"
                Margin="0,0,10,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Data="M 0 0  6 6 12 0 Z"
                Fill="{DynamicResource RegionReverse03}"
                Stretch="None" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="180" CenterX="6" CenterY="3" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Arrow" Property="Margin" Value="0,0,10,0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10,2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="attach:ValueAttach.CornerRadius" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{Binding Path=(attach:ValueAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                        <!--<ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />-->

                        <TextBlock
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="Transparent"
                            Foreground="{DynamicResource TextBrush01}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Text="{TemplateBinding Content}" />

                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource RegionReverse02}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BorderBrush02}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="BaseComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="border"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding Path=(attach:ValueAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentPresenter
                x:Name="ContentSite"
                Grid.Column="0"
                Margin="13,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="{TemplateBinding SelectionBoxItem}"
                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                IsHitTestVisible="False" />

            <!--  ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen  -->
            <ToggleButton
                x:Name="ToggleButton"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                ClickMode="Press"
                Focusable="false"
                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                OverridesDefaultStyle="True"
                Template="{StaticResource ComboBoxToggleButton}" />



            <!--  必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它  -->
            <TextBox
                x:Name="PART_EditableTextBox"
                Grid.Column="0"
                Margin="2,0,0,0"
                VerticalAlignment="Center"
                Background="{DynamicResource TextBrush01}"
                BorderThickness="0"
                Focusable="True"
                IsReadOnly="{TemplateBinding IsReadOnly}"
                OverridesDefaultStyle="True"
                Visibility="Hidden" />

            <!--  Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen  -->
            <Popup
                x:Name="Popup"
                Grid.Column="0"
                AllowsTransparency="True"
                Focusable="False"
                IsOpen="{TemplateBinding IsDropDownOpen}"
                Placement="Bottom"
                PopupAnimation="Slide">
                <Grid
                    x:Name="DropDown"
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="150"
                    SnapsToDevicePixels="True">
                    <Border
                        x:Name="DropDownBorder"
                        BorderBrush="{DynamicResource Region03}"
                        BorderThickness="1,0,1,1" />
                    <ScrollViewer
                        Margin="0"
                        CanContentScroll="True"
                        HorizontalScrollBarVisibility="Auto"
                        SnapsToDevicePixels="True"
                        VerticalScrollBarVisibility="Auto">
                        <!--  StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True  -->
                        <StackPanel
                            Background="{DynamicResource Region03}"
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
            </Trigger>

            <Trigger Property="IsDropDownOpen" Value="True">
                <!--<Setter TargetName="border" Property="CornerRadius" Value="0" />-->

            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="attach:ValueAttach.CornerRadius" Value="4" />
        <Setter Property="MinHeight" Value="36" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="{DynamicResource Region03}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Region03}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource BaseComboBoxItem}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template" Value="{StaticResource BaseComboBoxTemplate}" />

    </Style>

</ResourceDictionary>